stages:
  - tests
  - build
  - deploy

black:
  stage: tests
  image: ghcr.io/binkhq/python:3.9
  before_script:
    - pipenv install --system --deploy --ignore-pipfile
  script:
    - black -l 120 -t py38 --check .
    - flake8 .

build-develop:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
    - export CTAG=$(echo -n "$CI_PIPELINE_CREATED_AT" | sed s/\://g)
  script:
    - docker build --pull --tag "$CI_REGISTRY/postgres-syncer:$CTAG" .
    - docker push "$CI_REGISTRY/postgres-syncer:$CTAG"
  only:
    - master

tag-develop:
  stage: deploy
  image: binkops.azurecr.io/tagbot:latest
  before_script:
    - export CTAG=$(echo -n "$CI_PIPELINE_CREATED_AT" | sed s/\://g)
  script:
    - tagbot --username "$CI_REGISTRY_USER" --password "$CI_REGISTRY_PASSWORD" --source "$CI_REGISTRY/postgres-syncer:$CTAG" --tag "latest"
  only:
    - master
